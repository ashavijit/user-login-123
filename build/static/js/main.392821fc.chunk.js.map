{"version":3,"sources":["_state/alert.js","_state/auth.js","_state/users.js","_actions/alert.actions.js","_helpers/fake-backend.js","_helpers/history.js","_actions/user.actions.js","_helpers/fetch-wrapper.js","_components/Alert.jsx","_components/Nav.jsx","_components/PrivateRoute.jsx","home/Home.jsx","users/AddEdit.jsx","users/List.jsx","users/Users.jsx","account/Account.jsx","account/Login.jsx","account/Register.jsx","App.jsx","index.js"],"names":["alertAtom","atom","key","default","authAtom","JSON","parse","localStorage","getItem","usersAtom","userAtom","useAlertActions","setAlert","useSetRecoilState","success","message","type","error","clear","useResetRecoilState","usersKey","users","history","createBrowserHistory","useUserActions","baseUrl","process","fetchWrapper","useRecoilState","auth","setAuth","alertActions","get","request","post","put","delete","method","url","body","requestOptions","headers","authHeader","stringify","fetch","then","handleResponse","token","isLoggedIn","isApiUrl","startsWith","Authorization","response","text","data","ok","includes","status","removeItem","push","statusText","Promise","reject","useFetchWrapper","setUsers","setUser","login","username","password","user","setItem","from","location","state","pathname","logout","register","getAll","getById","id","update","params","x","map","isDeleting","filter","resetUsers","resetUser","Alert","alert","useRecoilValue","useEffect","listen","className","onClick","Nav","userActions","exact","to","PrivateRoute","Component","component","rest","render","props","Home","firstName","AddEdit","match","mode","add","edit","validationSchema","Yup","shape","required","lastName","transform","undefined","concat","min","formOptions","resolver","yupResolver","useForm","handleSubmit","reset","formState","errors","isSubmitting","loading","onSubmit","createUser","updateUser","name","email","disabled","List","path","style","width","whiteSpace","colSpan","Users","Account","Login","Register","App","realFetch","window","opts","resolve","unauthorized","basicDetails","isAuthenticated","idFromUrl","urlParts","split","parseInt","length","setTimeout","endsWith","find","authenticate","Math","max","Object","assign","catch","fakeBackend","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.392821fc.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nconst alertAtom = atom({\n    key: 'alert',\n    default: null\n});\n\nexport { alertAtom };","import { atom } from 'recoil';\n\nconst authAtom = atom({\n    key: 'auth',\n    // get initial state from local storage to enable user to stay logged in\n    default: JSON.parse(localStorage.getItem('user'))\n});\n\nexport { authAtom };","import { atom } from 'recoil';\n\nconst usersAtom = atom({\n    key: 'users',\n    default: null\n});\n\nconst userAtom = atom({\n    key: 'user',\n    default: null\n});\n\nexport { \n    usersAtom,\n    userAtom\n};","import { useSetRecoilState, useResetRecoilState } from 'recoil';\n\nimport { alertAtom } from '_state';\n\nexport { useAlertActions };\n\nfunction useAlertActions () {\n    const setAlert = useSetRecoilState(alertAtom);\n    const resetAlert = useResetRecoilState(alertAtom);\n\n    return {\n        success: message => setAlert({ message, type: 'alert-success' }),\n        error: message => setAlert({ message, type: 'alert-danger' }),\n        clear: resetAlert\n    }\n}\n","export { fakeBackend };\n\n// array in local storage for registered users\nconst usersKey = 'react-recoil-registration-login-example-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\n\nfunction fakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                switch (true) {\n                    case url.endsWith('/users/authenticate') && opts.method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/users/register') && opts.method === 'POST':\n                        return register();\n                    case url.endsWith('/users') && opts.method === 'GET':\n                        return getUsers();\n                    case url.match(/\\/users\\/\\d+$/) && opts.method === 'GET':\n                        return getUserById();\n                    case url.match(/\\/users\\/\\d+$/) && opts.method === 'PUT':\n                        return updateUser();\n                    case url.match(/\\/users\\/\\d+$/) && opts.method === 'DELETE':\n                        return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then(response => resolve(response))\n                            .catch(error => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { username, password } = body();\n                const user = users.find(x => x.username === username && x.password === password);\n\n                if (!user) return error('Username or password is incorrect');\n\n                return ok({\n                    ...basicDetails(user),\n                    token: 'fake-jwt-token'\n                });\n            }\n\n            function register() {\n                const user = body();\n    \n                if (users.find(x => x.username === user.username)) {\n                    return error('Username \"' + user.username + '\" is already taken')\n                }\n    \n                user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n                users.push(user);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n                return ok();\n            }\n    \n            function getUsers() {\n                if (!isAuthenticated()) return unauthorized();\n                return ok(users.map(x => basicDetails(x)));\n            }\n\n            function getUserById() {\n                if (!isAuthenticated()) return unauthorized();\n    \n                const user = users.find(x => x.id === idFromUrl());\n                return ok(basicDetails(user));\n            }\n    \n            function updateUser() {\n                if (!isAuthenticated()) return unauthorized();\n    \n                let params = body();\n                let user = users.find(x => x.id === idFromUrl());\n    \n                // only update password if entered\n                if (!params.password) {\n                    delete params.password;\n                }\n    \n                // update and save user\n                Object.assign(user, params);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n    \n                return ok();\n            }\n    \n            function deleteUser() {\n                if (!isAuthenticated()) return unauthorized();\n    \n                users = users.filter(x => x.id !== idFromUrl());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n                return ok();\n            }\n    \n            // helper functions\n\n            function ok(body) {\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n            }\n\n            function unauthorized() {\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) })\n            }\n\n            function error(message) {\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n            }\n\n            function basicDetails(user) {\n                const { id, username, firstName, lastName } = user;\n                return { id, username, firstName, lastName };\n            }\n    \n            function isAuthenticated() {\n                return opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n            }\n\n            function body() {\n                return opts.body && JSON.parse(opts.body);    \n            }\n\n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n        });\n    }\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport { history };","import { useRecoilState, useSetRecoilState, useResetRecoilState } from 'recoil';\n\nimport { history, useFetchWrapper } from '_helpers';\nimport { authAtom, usersAtom, userAtom } from '_state';\n\nexport { useUserActions };\n\nfunction useUserActions () {\n    const baseUrl = `${process.env.REACT_APP_API_URL}/users`;\n    const fetchWrapper = useFetchWrapper();\n    const [auth, setAuth] = useRecoilState(authAtom);\n    const setUsers = useSetRecoilState(usersAtom);\n    const setUser = useSetRecoilState(userAtom);\n\n    return {\n        login,\n        logout,\n        register,\n        getAll,\n        getById,\n        update,\n        delete: _delete,\n        resetUsers: useResetRecoilState(usersAtom),\n        resetUser: useResetRecoilState(userAtom)\n    }\n\n    function login({ username, password }) {\n        return fetchWrapper.post(`${baseUrl}/authenticate`, { username, password })\n            .then(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                setAuth(user);\n\n                // get return url from location state or default to home page\n                const { from } = history.location.state || { from: { pathname: '/' } };\n                history.push(from);\n            });\n    }\n\n    function logout() {\n        // remove user from local storage, set auth state to null and redirect to login page\n        localStorage.removeItem('user');\n        setAuth(null);\n        history.push('/account/login');\n    }\n\n    function register(user) {\n        return fetchWrapper.post(`${baseUrl}/register`, user);\n    }\n\n    function getAll() {\n        return fetchWrapper.get(baseUrl).then(setUsers);\n    }\n\n    function getById(id) {\n        return fetchWrapper.get(`${baseUrl}/${id}`).then(setUser);\n    }\n\n    function update(id, params) {\n        return fetchWrapper.put(`${baseUrl}/${id}`, params)\n            .then(x => {\n                // update stored user if the logged in user updated their own record\n                if (id === auth?.id) {\n                    // update local storage\n                    const user = { ...auth, ...params };\n                    localStorage.setItem('user', JSON.stringify(user));\n\n                    // update auth user in recoil state\n                    setAuth(user);\n                }\n                return x;\n            });\n    }\n\n    // prefixed with underscored because delete is a reserved word in javascript\n    function _delete(id) {\n        setUsers(users => users.map(x => {\n            // add isDeleting prop to user being deleted\n            if (x.id === id) \n                return { ...x, isDeleting: true };\n\n            return x;\n        }));\n\n        return fetchWrapper.delete(`${baseUrl}/${id}`)\n            .then(() => {\n                // remove user from list after deleting\n                setUsers(users => users.filter(x => x.id !== id));\n\n                // auto logout if the logged in user deleted their own record\n                if (id === auth?.id) {\n                    logout();\n                }\n            });\n    }\n}\n","import { useRecoilState } from 'recoil';\n\nimport { history } from '_helpers';\nimport { authAtom } from '_state';\nimport { useAlertActions } from '_actions';\n\nexport { useFetchWrapper };\n\nfunction useFetchWrapper() {\n    const [auth, setAuth] = useRecoilState(authAtom);\n    const alertActions = useAlertActions();\n\n    return {\n        get: request('GET'),\n        post: request('POST'),\n        put: request('PUT'),\n        delete: request('DELETE')\n    };\n\n    function request(method) {\n        return (url, body) => {\n            const requestOptions = {\n                method,\n                headers: authHeader(url)\n            };\n            if (body) {\n                requestOptions.headers['Content-Type'] = 'application/json';\n                requestOptions.body = JSON.stringify(body);\n            }\n            return fetch(url, requestOptions).then(handleResponse);\n        }\n    }\n    \n    // helper functions\n    \n    function authHeader(url) {\n        // return auth header with jwt if user is logged in and request is to the api url\n        const token = auth?.token;\n        const isLoggedIn = !!token;\n        const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\n        if (isLoggedIn && isApiUrl) {\n            return { Authorization: `Bearer ${token}` };\n        } else {\n            return {};\n        }\n    }\n    \n    function handleResponse(response) {\n        return response.text().then(text => {\n            const data = text && JSON.parse(text);\n            \n            if (!response.ok) {\n                if ([401, 403].includes(response.status) && auth?.token) {\n                    // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                    localStorage.removeItem('user');\n                    setAuth(null);\n                    history.push('/account/login');\n                }\n    \n                const error = (data && data.message) || response.statusText;\n                alertActions.error(error);\n                return Promise.reject(error);\n            }\n    \n            return data;\n        });\n    }    \n}\n","import { useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { alertAtom } from '_state';\nimport { useAlertActions } from '_actions';\nimport { history } from '_helpers';\n\nexport { Alert };\n\nfunction Alert() {\n    const alert = useRecoilValue(alertAtom);\n    const alertActions = useAlertActions();\n\n    useEffect(() => {\n        // clear alert on location change\n        const unlisten = history.listen(alertActions.clear);\n\n        // stop the listener when component unmounts\n        return unlisten;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!alert) return null;\n\n    return (\n        <div className=\"container\">\n            <div className=\"m-3\">\n                <div className={`alert alert-dismissable ${alert.type}`}>\n                    <a className=\"close\" onClick={alertActions.clear}>&times;</a>\n                    {alert.message}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { NavLink } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '_state';\nimport { useUserActions } from '_actions';\n\nexport { Nav };\n\nfunction Nav() {\n    const auth = useRecoilValue(authAtom);\n    const userActions = useUserActions();\n\n    // only show nav when logged in\n    if (!auth) return null;\n    \n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <div className=\"navbar-nav\">\n                <NavLink exact to=\"/\" className=\"nav-item nav-link\">Home</NavLink>\n                <NavLink to=\"/users\" className=\"nav-item nav-link\">Users</NavLink>\n                <a onClick={userActions.logout} className=\"nav-item nav-link\">Logout</a>\n            </div>\n        </nav>\n    );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '_state';\n\nexport { PrivateRoute };\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const auth = useRecoilValue(authAtom);\n    return (\n        <Route {...rest} render={props => {\n            if (!auth) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />\n            }\n\n            // authorized so return component\n            return <Component {...props} />\n        }} />\n    );\n}","import { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '_state';\n\nexport { Home };\n\nfunction Home() {\n    const auth = useRecoilValue(authAtom);\n\n    return (\n        <div className=\"p-4\">\n            <div className=\"container\">\n                <h1>Hi {auth?.firstName}!</h1>\n                <p>You're logged in with React + Recoil & JWT!!</p>\n                <p><Link to=\"/users\">Manage Users</Link></p>\n            </div>\n        </div>\n    );\n}\n","import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useRecoilValue } from 'recoil';\n\nimport { userAtom } from '_state';\nimport { useUserActions, useAlertActions } from '_actions';\n\nexport { AddEdit };\n\nfunction AddEdit({ history, match }) {\n    const { id } = match.params;\n    const mode = { add: !id, edit: !!id };\n    const userActions = useUserActions();\n    const alertActions = useAlertActions();\n    const user = useRecoilValue(userAtom);\n\n    // form validation rules \n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .required('First Name is required'),\n        lastName: Yup.string()\n            .required('Last Name is required'),\n        username: Yup.string()\n            .required('Username is required'),\n        password: Yup.string()\n            .transform(x => x === '' ? undefined : x)\n            .concat(mode.add ? Yup.string().required('Password is required') : null)\n            .min(6, 'Password must be at least 6 characters')\n    });\n    const formOptions = { resolver: yupResolver(validationSchema) };\n\n    // get functions to build form with useForm() hook\n    const { register, handleSubmit, reset, formState } = useForm(formOptions);\n    const { errors, isSubmitting } = formState;\n\n    useEffect(() => {\n        // fetch user details into recoil state in edit mode\n        if (mode.edit) {\n            userActions.getById(id);\n        }\n\n        return userActions.resetUser;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        // set default form values after user set in recoil state (in edit mode)\n        if (mode.edit && user) {\n            reset(user);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user])\n\n    function onSubmit(data) {\n        return mode.add\n            ? createUser(data)\n            : updateUser(user.id, data);\n    }\n\n    function createUser(data) {\n        return userActions.register(data)\n            .then(() => {\n                history.push('/users');\n                alertActions.success('User added');\n            });\n    }\n\n    function updateUser(id, data) {\n        return userActions.update(id, data)\n            .then(() => {\n                history.push('/users');\n                alertActions.success('User updated');\n            });\n    }\n\n    const loading = mode.edit && !user;\n    return (\n        <>\n            <h1>{mode.add ? 'Add User' : 'Edit User'}</h1>\n            {!loading &&\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col\">\n                            <label>First Name</label>\n                            <input name=\"firstName\" type=\"text\" {...register('firstName')} className={`form-control ${errors.firstName ? 'is-invalid' : ''}`} />\n                            <div className=\"invalid-feedback\">{errors.firstName?.message}</div>\n                        </div>\n                        <div className=\"form-group col\">\n                            <label>Last Name</label>\n                            <input name=\"lastName\" type=\"text\" {...register('lastName')} className={`form-control ${errors.lastName ? 'is-invalid' : ''}`} />\n                            <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col\">\n                            <label>Username</label>\n                            <input name=\"username\" type=\"text\" {...register('username')} className={`form-control ${errors.username ? 'is-invalid' : ''}`} />\n                            <div className=\"invalid-feedback\">{errors.email?.message}</div>\n                        </div>\n                        <div className=\"form-group col\">\n                            <label>\n                                Password\n                                {mode.edit && <em className=\"ml-1\">(Leave blank to keep the same password)</em>}\n                            </label>\n                            <input name=\"password\" type=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} />\n                            <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mr-2\">\n                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                            Save\n                        </button>\n                        <button onClick={() => reset(user)} type=\"button\" disabled={isSubmitting} className=\"btn btn-secondary\">Reset</button>\n                        <Link to=\"/users\" className=\"btn btn-link\">Cancel</Link>\n                    </div>\n                </form>\n            }\n            {loading &&\n                <div className=\"text-center p-3\">\n                    <span className=\"spinner-border spinner-border-lg align-center\"></span>\n                </div>\n            }\n        </>\n    );\n}\n","import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { usersAtom } from '_state';\nimport { useUserActions } from '_actions';\n\nexport { List };\n\nfunction List({ match }) {\n    const { path } = match;\n    const users = useRecoilValue(usersAtom);\n    const userActions = useUserActions();\n\n    useEffect(() => {\n        userActions.getAll();\n        \n        return userActions.resetUsers;\n        \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div>\n            <h1>Users</h1>\n            <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">Add User</Link>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th style={{ width: '30%' }}>First Name</th>\n                        <th style={{ width: '30%' }}>Last Name</th>\n                        <th style={{ width: '30%' }}>Username</th>\n                        <th style={{ width: '10%' }}></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users?.map(user =>\n                        <tr key={user.id}>\n                            <td>{user.firstName}</td>\n                            <td>{user.lastName}</td>\n                            <td>{user.username}</td>\n                            <td style={{ whiteSpace: 'nowrap' }}>\n                                <Link to={`${path}/edit/${user.id}`} className=\"btn btn-sm btn-primary mr-1\">Edit</Link>\n                                <button onClick={() => userActions.delete(user.id)} className=\"btn btn-sm btn-danger\" style={{ width: '60px' }} disabled={user.isDeleting}>\n                                    {user.isDeleting \n                                        ? <span className=\"spinner-border spinner-border-sm\"></span>\n                                        : <span>Delete</span>\n                                    }\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                    {!users &&\n                        <tr>\n                            <td colSpan=\"4\" className=\"text-center\">\n                                <span className=\"spinner-border spinner-border-lg align-center\"></span>\n                            </td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { List, AddEdit } from './';\n\nexport { Users };\n\nfunction Users({ match }) {\n    const { path } = match;\n    \n    return (\n        <div className=\"p-4\">\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path={path} component={List} />\n                    <Route path={`${path}/add`} component={AddEdit} />\n                    <Route path={`${path}/edit/:id`} component={AddEdit} />\n                </Switch>\n            </div>\n        </div>\n    );\n}\n","import { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '_state';\nimport { Login, Register } from './';\n\nexport { Account };\n\nfunction Account({ history, match }) {\n    const auth = useRecoilValue(authAtom);\n    const { path } = match;\n\n    useEffect(() => {\n        // redirect to home if already logged in\n        if (auth) history.push('/');\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-8 offset-sm-2 mt-5\">\n                    <Switch>\n                        <Route path={`${path}/login`} component={Login} />\n                        <Route path={`${path}/register`} component={Register} />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nimport { useUserActions } from '_actions';\n\nexport { Login };\n\nfunction Login() {\n    const userActions = useUserActions();\n\n    // form validation rules \n    const validationSchema = Yup.object().shape({\n        username: Yup.string().required('Username is required'),\n        password: Yup.string().required('Password is required')\n    });\n    const formOptions = { resolver: yupResolver(validationSchema) };\n\n    // get functions to build form with useForm() hook\n    const { register, handleSubmit, formState } = useForm(formOptions);\n    const { errors, isSubmitting } = formState;\n\n    return (\n        <div className=\"card m-3\">\n            <h4 className=\"card-header\">Login</h4>\n            <div className=\"card-body\">\n                <form onSubmit={handleSubmit(userActions.login)}>\n                    <div className=\"form-group\">\n                        <label>Username</label>\n                        <input name=\"username\" type=\"text\" {...register('username')} className={`form-control ${errors.username ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.username?.message}</div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input name=\"password\" type=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                    </div>\n                    <button disabled={isSubmitting} className=\"btn btn-primary\">\n                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                        Login\n                    </button>\n                    <Link to=\"register\" className=\"btn btn-link\">Register</Link>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nimport { useUserActions, useAlertActions } from '_actions';\n\nexport { Register };\n\nfunction Register({ history }) {\n    const userActions = useUserActions();\n    const alertActions = useAlertActions();\n\n    // form validation rules \n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .required('First Name is required'),\n        lastName: Yup.string()\n            .required('Last Name is required'),\n        username: Yup.string()\n            .required('Username is required'),\n        password: Yup.string()\n            .required('Password is required')\n            .min(6, 'Password must be at least 6 characters')\n    });\n    const formOptions = { resolver: yupResolver(validationSchema) };\n\n    // get functions to build form with useForm() hook\n    const { register, handleSubmit, formState } = useForm(formOptions);\n    const { errors, isSubmitting } = formState;\n\n    function onSubmit(data) {\n        return userActions.register(data)\n            .then(() => {\n                history.push('/account/login');\n                alertActions.success('Registration successful');\n            })\n    }\n\n    return (\n        <div className=\"card m-3\">\n            <h4 className=\"card-header\">Register</h4>\n            <div className=\"card-body\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label>First Name</label>\n                        <input name=\"firstName\" type=\"text\" {...register('firstName')} className={`form-control ${errors.firstName ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.firstName?.message}</div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <input name=\"lastName\" type=\"text\" {...register('lastName')} className={`form-control ${errors.lastName ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Username</label>\n                        <input name=\"username\" type=\"text\" {...register('username')} className={`form-control ${errors.username ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.username?.message}</div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input name=\"password\" type=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} />\n                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                    </div>\n                    <button disabled={isSubmitting} className=\"btn btn-primary\">\n                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                        Register\n                    </button>\n                    <Link to=\"login\" className=\"btn btn-link\">Cancel</Link>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '_state';\nimport { Nav, Alert, PrivateRoute } from '_components';\nimport { history } from '_helpers';\nimport { Home } from 'home';\nimport { Users } from 'users';\nimport { Account } from 'account';\n\nexport { App };\n\nfunction App() {\n    const auth = useRecoilValue(authAtom);\n\n    return (\n        <div className={'app-container' + (auth ? ' bg-light' : '')}>\n            <Router history={history}>\n                <Nav />\n                <Alert />\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Home} />\n                    <PrivateRoute path=\"/users\" component={Users} />\n                    <Route path=\"/account\" component={Account} />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport 'index.css';\nimport { App } from 'App';\n\n\nimport { fakeBackend } from '_helpers';\nfakeBackend();\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <App />\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n"],"sourceRoot":""}